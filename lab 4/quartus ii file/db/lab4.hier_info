|topIO_Interface
PIN_AF14 => CounterEnvelope:pll_wrap.Clk
SW8 => top:TOPModule.ena
SW8 => X[0].ENA
SW8 => X[1].ENA
SW8 => X[2].ENA
SW8 => X[3].ENA
SW8 => X[4].ENA
SW8 => X[5].ENA
SW8 => X[6].ENA
SW8 => X[7].ENA
SW8 => ALUFN[0].ENA
SW8 => ALUFN[1].ENA
SW8 => ALUFN[2].ENA
SW8 => ALUFN[3].ENA
SW8 => ALUFN[4].ENA
SW8 => Y[0].ENA
SW8 => Y[1].ENA
SW8 => Y[2].ENA
SW8 => Y[3].ENA
SW8 => Y[4].ENA
SW8 => Y[5].ENA
SW8 => Y[6].ENA
SW8 => Y[7].ENA
SW_i[0] => Y.DATAB
SW_i[0] => ALUFN.DATAB
SW_i[0] => X.DATAB
SW_i[1] => Y.DATAB
SW_i[1] => ALUFN.DATAB
SW_i[1] => X.DATAB
SW_i[2] => Y.DATAB
SW_i[2] => ALUFN.DATAB
SW_i[2] => X.DATAB
SW_i[3] => Y.DATAB
SW_i[3] => ALUFN.DATAB
SW_i[3] => X.DATAB
SW_i[4] => Y.DATAB
SW_i[4] => ALUFN.DATAB
SW_i[4] => X.DATAB
SW_i[5] => Y.DATAB
SW_i[5] => X.DATAB
SW_i[6] => Y.DATAB
SW_i[6] => X.DATAB
SW_i[7] => Y.DATAB
SW_i[7] => X.DATAB
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY0 => Y.OUTPUTSELECT
KEY1 => ALUFN.OUTPUTSELECT
KEY1 => ALUFN.OUTPUTSELECT
KEY1 => ALUFN.OUTPUTSELECT
KEY1 => ALUFN.OUTPUTSELECT
KEY1 => ALUFN.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY2 => X.OUTPUTSELECT
KEY3 => top:TOPModule.rst
KEY3 => CounterEnvelope:pll_wrap.rst
HEX0[0] <= SegDecoder:DecoderModuleXHex0.seg[0]
HEX0[1] <= SegDecoder:DecoderModuleXHex0.seg[1]
HEX0[2] <= SegDecoder:DecoderModuleXHex0.seg[2]
HEX0[3] <= SegDecoder:DecoderModuleXHex0.seg[3]
HEX0[4] <= SegDecoder:DecoderModuleXHex0.seg[4]
HEX0[5] <= SegDecoder:DecoderModuleXHex0.seg[5]
HEX0[6] <= SegDecoder:DecoderModuleXHex0.seg[6]
HEX1[0] <= SegDecoder:DecoderModuleXHex1.seg[0]
HEX1[1] <= SegDecoder:DecoderModuleXHex1.seg[1]
HEX1[2] <= SegDecoder:DecoderModuleXHex1.seg[2]
HEX1[3] <= SegDecoder:DecoderModuleXHex1.seg[3]
HEX1[4] <= SegDecoder:DecoderModuleXHex1.seg[4]
HEX1[5] <= SegDecoder:DecoderModuleXHex1.seg[5]
HEX1[6] <= SegDecoder:DecoderModuleXHex1.seg[6]
HEX2[0] <= SegDecoder:DecoderModuleYHex2.seg[0]
HEX2[1] <= SegDecoder:DecoderModuleYHex2.seg[1]
HEX2[2] <= SegDecoder:DecoderModuleYHex2.seg[2]
HEX2[3] <= SegDecoder:DecoderModuleYHex2.seg[3]
HEX2[4] <= SegDecoder:DecoderModuleYHex2.seg[4]
HEX2[5] <= SegDecoder:DecoderModuleYHex2.seg[5]
HEX2[6] <= SegDecoder:DecoderModuleYHex2.seg[6]
HEX3[0] <= SegDecoder:DecoderModuleYHex3.seg[0]
HEX3[1] <= SegDecoder:DecoderModuleYHex3.seg[1]
HEX3[2] <= SegDecoder:DecoderModuleYHex3.seg[2]
HEX3[3] <= SegDecoder:DecoderModuleYHex3.seg[3]
HEX3[4] <= SegDecoder:DecoderModuleYHex3.seg[4]
HEX3[5] <= SegDecoder:DecoderModuleYHex3.seg[5]
HEX3[6] <= SegDecoder:DecoderModuleYHex3.seg[6]
HEX4[0] <= SegDecoder:DecoderModuleOutHex4.seg[0]
HEX4[1] <= SegDecoder:DecoderModuleOutHex4.seg[1]
HEX4[2] <= SegDecoder:DecoderModuleOutHex4.seg[2]
HEX4[3] <= SegDecoder:DecoderModuleOutHex4.seg[3]
HEX4[4] <= SegDecoder:DecoderModuleOutHex4.seg[4]
HEX4[5] <= SegDecoder:DecoderModuleOutHex4.seg[5]
HEX4[6] <= SegDecoder:DecoderModuleOutHex4.seg[6]
HEX5[0] <= SegDecoder:DecoderModuleOutHex5.seg[0]
HEX5[1] <= SegDecoder:DecoderModuleOutHex5.seg[1]
HEX5[2] <= SegDecoder:DecoderModuleOutHex5.seg[2]
HEX5[3] <= SegDecoder:DecoderModuleOutHex5.seg[3]
HEX5[4] <= SegDecoder:DecoderModuleOutHex5.seg[4]
HEX5[5] <= SegDecoder:DecoderModuleOutHex5.seg[5]
HEX5[6] <= SegDecoder:DecoderModuleOutHex5.seg[6]
LEDs[0] <= top:TOPModule.Nflag_o
LEDs[1] <= top:TOPModule.Cflag_o
LEDs[2] <= top:TOPModule.Zflag_o
LEDs[3] <= top:TOPModule.Vflag_o
LEDs[4] <= <GND>
LEDs[5] <= ALUFN[0].DB_MAX_OUTPUT_PORT_TYPE
LEDs[6] <= ALUFN[1].DB_MAX_OUTPUT_PORT_TYPE
LEDs[7] <= ALUFN[2].DB_MAX_OUTPUT_PORT_TYPE
LEDs[8] <= ALUFN[3].DB_MAX_OUTPUT_PORT_TYPE
LEDs[9] <= ALUFN[4].DB_MAX_OUTPUT_PORT_TYPE
PWM_OUT <= top:TOPModule.PWM_OUT


|topIO_Interface|top:TOPModule
Y_i[0] => PWM:PWM_inst.Y_PWM_in[0]
Y_i[0] => ALU:ALU_inst.Y_i[0]
Y_i[1] => PWM:PWM_inst.Y_PWM_in[1]
Y_i[1] => ALU:ALU_inst.Y_i[1]
Y_i[2] => PWM:PWM_inst.Y_PWM_in[2]
Y_i[2] => ALU:ALU_inst.Y_i[2]
Y_i[3] => PWM:PWM_inst.Y_PWM_in[3]
Y_i[3] => ALU:ALU_inst.Y_i[3]
Y_i[4] => PWM:PWM_inst.Y_PWM_in[4]
Y_i[4] => ALU:ALU_inst.Y_i[4]
Y_i[5] => PWM:PWM_inst.Y_PWM_in[5]
Y_i[5] => ALU:ALU_inst.Y_i[5]
Y_i[6] => PWM:PWM_inst.Y_PWM_in[6]
Y_i[6] => ALU:ALU_inst.Y_i[6]
Y_i[7] => PWM:PWM_inst.Y_PWM_in[7]
Y_i[7] => ALU:ALU_inst.Y_i[7]
X_i[0] => PWM:PWM_inst.X_PWM_in[0]
X_i[0] => ALU:ALU_inst.X_i[0]
X_i[1] => PWM:PWM_inst.X_PWM_in[1]
X_i[1] => ALU:ALU_inst.X_i[1]
X_i[2] => PWM:PWM_inst.X_PWM_in[2]
X_i[2] => ALU:ALU_inst.X_i[2]
X_i[3] => PWM:PWM_inst.X_PWM_in[3]
X_i[3] => ALU:ALU_inst.X_i[3]
X_i[4] => PWM:PWM_inst.X_PWM_in[4]
X_i[4] => ALU:ALU_inst.X_i[4]
X_i[5] => PWM:PWM_inst.X_PWM_in[5]
X_i[5] => ALU:ALU_inst.X_i[5]
X_i[6] => PWM:PWM_inst.X_PWM_in[6]
X_i[6] => ALU:ALU_inst.X_i[6]
X_i[7] => PWM:PWM_inst.X_PWM_in[7]
X_i[7] => ALU:ALU_inst.X_i[7]
ALUFN_i[0] => PWM:PWM_inst.ALUFN[0]
ALUFN_i[0] => ALU:ALU_inst.ALUFN_i[0]
ALUFN_i[1] => PWM:PWM_inst.ALUFN[1]
ALUFN_i[1] => ALU:ALU_inst.ALUFN_i[1]
ALUFN_i[2] => PWM:PWM_inst.ALUFN[2]
ALUFN_i[2] => ALU:ALU_inst.ALUFN_i[2]
ALUFN_i[3] => PWM:PWM_inst.ALUFN[3]
ALUFN_i[3] => ALU:ALU_inst.ALUFN_i[3]
ALUFN_i[4] => PWM:PWM_inst.ALUFN[4]
ALUFN_i[4] => ALU:ALU_inst.ALUFN_i[4]
ALUout_o[0] <= ALU:ALU_inst.ALUout_o[0]
ALUout_o[1] <= ALU:ALU_inst.ALUout_o[1]
ALUout_o[2] <= ALU:ALU_inst.ALUout_o[2]
ALUout_o[3] <= ALU:ALU_inst.ALUout_o[3]
ALUout_o[4] <= ALU:ALU_inst.ALUout_o[4]
ALUout_o[5] <= ALU:ALU_inst.ALUout_o[5]
ALUout_o[6] <= ALU:ALU_inst.ALUout_o[6]
ALUout_o[7] <= ALU:ALU_inst.ALUout_o[7]
Nflag_o <= ALU:ALU_inst.Nflag_o
Cflag_o <= ALU:ALU_inst.Cflag_o
Zflag_o <= ALU:ALU_inst.Zflag_o
Vflag_o <= ALU:ALU_inst.Vflag_o
ena => PWM:PWM_inst.ena
rst => PWM:PWM_inst.rst
clk => PWM:PWM_inst.clk
PWM_OUT <= PWM:PWM_inst.PWM_OUT


|topIO_Interface|top:TOPModule|PWM:PWM_inst
Y_PWM_in[0] => Y_PWM[0].DATAB
Y_PWM_in[1] => Y_PWM[1].DATAB
Y_PWM_in[2] => Y_PWM[2].DATAB
Y_PWM_in[3] => Y_PWM[3].DATAB
Y_PWM_in[4] => Y_PWM[4].DATAB
Y_PWM_in[5] => Y_PWM[5].DATAB
Y_PWM_in[6] => Y_PWM[6].DATAB
Y_PWM_in[7] => Y_PWM[7].DATAB
X_PWM_in[0] => X_PWM[0].DATAB
X_PWM_in[1] => X_PWM[1].DATAB
X_PWM_in[2] => X_PWM[2].DATAB
X_PWM_in[3] => X_PWM[3].DATAB
X_PWM_in[4] => X_PWM[4].DATAB
X_PWM_in[5] => X_PWM[5].DATAB
X_PWM_in[6] => X_PWM[6].DATAB
X_PWM_in[7] => X_PWM[7].DATAB
ENA => PWM_OUT_REG.OUTPUTSELECT
ENA => COUNTER_PWM[7].ENA
ENA => COUNTER_PWM[6].ENA
ENA => COUNTER_PWM[5].ENA
ENA => COUNTER_PWM[4].ENA
ENA => COUNTER_PWM[3].ENA
ENA => COUNTER_PWM[2].ENA
ENA => COUNTER_PWM[1].ENA
ENA => COUNTER_PWM[0].ENA
RST => PWM_OUT_REG.ACLR
RST => COUNTER_PWM[0].ACLR
RST => COUNTER_PWM[1].ACLR
RST => COUNTER_PWM[2].ACLR
RST => COUNTER_PWM[3].ACLR
RST => COUNTER_PWM[4].ACLR
RST => COUNTER_PWM[5].ACLR
RST => COUNTER_PWM[6].ACLR
RST => COUNTER_PWM[7].ACLR
CLK => PWM_OUT_REG.CLK
CLK => COUNTER_PWM[0].CLK
CLK => COUNTER_PWM[1].CLK
CLK => COUNTER_PWM[2].CLK
CLK => COUNTER_PWM[3].CLK
CLK => COUNTER_PWM[4].CLK
CLK => COUNTER_PWM[5].CLK
CLK => COUNTER_PWM[6].CLK
CLK => COUNTER_PWM[7].CLK
ALUFN[0] => Equal2.IN9
ALUFN[0] => Equal3.IN9
ALUFN[1] => Equal2.IN8
ALUFN[1] => Equal3.IN8
ALUFN[2] => Equal2.IN7
ALUFN[2] => Equal3.IN7
ALUFN[3] => Equal0.IN3
ALUFN[3] => Equal2.IN6
ALUFN[3] => Equal3.IN6
ALUFN[4] => Equal0.IN2
ALUFN[4] => Equal2.IN5
ALUFN[4] => Equal3.IN5
PWM_OUT <= PWM_OUT_REG.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst
Y_i[0] => y_adderSub_in[0].DATAB
Y_i[0] => y_Shifter_in[0].DATAB
Y_i[0] => y_Logic_in[0].DATAB
Y_i[1] => y_adderSub_in[1].DATAB
Y_i[1] => y_Shifter_in[1].DATAB
Y_i[1] => y_Logic_in[1].DATAB
Y_i[2] => y_adderSub_in[2].DATAB
Y_i[2] => y_Shifter_in[2].DATAB
Y_i[2] => y_Logic_in[2].DATAB
Y_i[3] => y_adderSub_in[3].DATAB
Y_i[3] => y_Shifter_in[3].DATAB
Y_i[3] => y_Logic_in[3].DATAB
Y_i[4] => y_adderSub_in[4].DATAB
Y_i[4] => y_Shifter_in[4].DATAB
Y_i[4] => y_Logic_in[4].DATAB
Y_i[5] => y_adderSub_in[5].DATAB
Y_i[5] => y_Shifter_in[5].DATAB
Y_i[5] => y_Logic_in[5].DATAB
Y_i[6] => y_adderSub_in[6].DATAB
Y_i[6] => y_Shifter_in[6].DATAB
Y_i[6] => y_Logic_in[6].DATAB
Y_i[7] => y_adderSub_in[7].DATAB
Y_i[7] => y_Shifter_in[7].DATAB
Y_i[7] => y_Logic_in[7].DATAB
X_i[0] => x_adderSub_in[0].DATAB
X_i[0] => x_Shifter_in[0].DATAB
X_i[0] => x_Logic_in[0].DATAB
X_i[1] => x_adderSub_in[1].DATAB
X_i[1] => x_Shifter_in[1].DATAB
X_i[1] => x_Logic_in[1].DATAB
X_i[2] => x_adderSub_in[2].DATAB
X_i[2] => x_Shifter_in[2].DATAB
X_i[2] => x_Logic_in[2].DATAB
X_i[3] => x_adderSub_in[3].DATAB
X_i[3] => x_Logic_in[3].DATAB
X_i[4] => x_adderSub_in[4].DATAB
X_i[4] => x_Logic_in[4].DATAB
X_i[5] => x_adderSub_in[5].DATAB
X_i[5] => x_Logic_in[5].DATAB
X_i[6] => x_adderSub_in[6].DATAB
X_i[6] => x_Logic_in[6].DATAB
X_i[7] => x_adderSub_in[7].DATAB
X_i[7] => x_Logic_in[7].DATAB
ALUFN_i[0] => Equal7.IN9
ALUFN_i[0] => Equal8.IN9
ALUFN_i[0] => AdderSub:AdderSub_inst.ALUFN[0]
ALUFN_i[0] => Shifter:Shifter_inst.ALUFN[0]
ALUFN_i[0] => Logic:Logic_inst.ALUFN[0]
ALUFN_i[1] => Equal7.IN8
ALUFN_i[1] => Equal8.IN8
ALUFN_i[1] => AdderSub:AdderSub_inst.ALUFN[1]
ALUFN_i[1] => Shifter:Shifter_inst.ALUFN[1]
ALUFN_i[1] => Logic:Logic_inst.ALUFN[1]
ALUFN_i[2] => Equal7.IN7
ALUFN_i[2] => Equal8.IN7
ALUFN_i[2] => AdderSub:AdderSub_inst.ALUFN[2]
ALUFN_i[2] => Shifter:Shifter_inst.ALUFN[2]
ALUFN_i[2] => Logic:Logic_inst.ALUFN[2]
ALUFN_i[3] => Equal0.IN3
ALUFN_i[3] => Equal1.IN3
ALUFN_i[3] => Equal2.IN3
ALUFN_i[3] => Equal3.IN3
ALUFN_i[3] => Equal4.IN3
ALUFN_i[3] => Equal5.IN3
ALUFN_i[3] => Equal6.IN3
ALUFN_i[3] => Equal7.IN6
ALUFN_i[3] => Equal8.IN6
ALUFN_i[3] => Equal12.IN3
ALUFN_i[4] => Equal0.IN2
ALUFN_i[4] => Equal1.IN2
ALUFN_i[4] => Equal2.IN2
ALUFN_i[4] => Equal3.IN2
ALUFN_i[4] => Equal4.IN2
ALUFN_i[4] => Equal5.IN2
ALUFN_i[4] => Equal6.IN2
ALUFN_i[4] => Equal7.IN5
ALUFN_i[4] => Equal8.IN5
ALUFN_i[4] => Equal12.IN2
ALUout_o[0] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[1] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[2] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[3] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[4] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[5] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[6] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
ALUout_o[7] <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
Nflag_o <= ALUOUT.DB_MAX_OUTPUT_PORT_TYPE
Cflag_o <= Cflag_o.DB_MAX_OUTPUT_PORT_TYPE
Zflag_o <= Zflag_o.DB_MAX_OUTPUT_PORT_TYPE
Vflag_o <= Vflag_o.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst
x_adderSub_in[0] => x_adderSub_xor.IN1
x_adderSub_in[1] => x_adderSub_xor.IN1
x_adderSub_in[2] => x_adderSub_xor.IN1
x_adderSub_in[3] => x_adderSub_xor.IN1
x_adderSub_in[4] => x_adderSub_xor.IN1
x_adderSub_in[5] => x_adderSub_xor.IN1
x_adderSub_in[6] => x_adderSub_xor.IN1
x_adderSub_in[7] => x_adderSub_xor.IN1
y_adderSub_in[0] => y_adderSub_gated[0].DATAB
y_adderSub_in[1] => y_adderSub_gated[1].DATAB
y_adderSub_in[2] => y_adderSub_gated[2].DATAB
y_adderSub_in[3] => y_adderSub_gated[3].DATAB
y_adderSub_in[4] => y_adderSub_gated[4].DATAB
y_adderSub_in[5] => y_adderSub_gated[5].DATAB
y_adderSub_in[6] => y_adderSub_gated[6].DATAB
y_adderSub_in[7] => y_adderSub_gated[7].DATAB
ALUFN[0] => Equal0.IN2
ALUFN[0] => Equal1.IN1
ALUFN[0] => Equal2.IN2
ALUFN[0] => Equal3.IN2
ALUFN[0] => Equal4.IN2
ALUFN[0] => Equal5.IN2
ALUFN[0] => Equal6.IN1
ALUFN[0] => Equal7.IN2
ALUFN[0] => Equal8.IN2
ALUFN[0] => Equal9.IN1
ALUFN[0] => Equal10.IN2
ALUFN[0] => Equal11.IN2
ALUFN[0] => Equal12.IN1
ALUFN[0] => Equal13.IN2
ALUFN[0] => Equal14.IN2
ALUFN[0] => Equal15.IN1
ALUFN[0] => Equal16.IN2
ALUFN[0] => Equal17.IN2
ALUFN[0] => Equal18.IN1
ALUFN[0] => Equal19.IN2
ALUFN[0] => Equal20.IN2
ALUFN[0] => Equal21.IN1
ALUFN[0] => Equal22.IN2
ALUFN[0] => Equal23.IN2
ALUFN[0] => Equal24.IN1
ALUFN[0] => Equal25.IN2
ALUFN[0] => Equal26.IN2
ALUFN[0] => Equal27.IN1
ALUFN[1] => Equal0.IN1
ALUFN[1] => Equal1.IN2
ALUFN[1] => Equal2.IN1
ALUFN[1] => Equal3.IN1
ALUFN[1] => Equal4.IN1
ALUFN[1] => Equal5.IN1
ALUFN[1] => Equal6.IN2
ALUFN[1] => Equal7.IN1
ALUFN[1] => Equal8.IN1
ALUFN[1] => Equal9.IN2
ALUFN[1] => Equal10.IN1
ALUFN[1] => Equal11.IN1
ALUFN[1] => Equal12.IN2
ALUFN[1] => Equal13.IN1
ALUFN[1] => Equal14.IN1
ALUFN[1] => Equal15.IN2
ALUFN[1] => Equal16.IN1
ALUFN[1] => Equal17.IN1
ALUFN[1] => Equal18.IN2
ALUFN[1] => Equal19.IN1
ALUFN[1] => Equal20.IN1
ALUFN[1] => Equal21.IN2
ALUFN[1] => Equal22.IN1
ALUFN[1] => Equal23.IN1
ALUFN[1] => Equal24.IN2
ALUFN[1] => Equal25.IN1
ALUFN[1] => Equal26.IN1
ALUFN[1] => Equal27.IN2
ALUFN[2] => Equal0.IN0
ALUFN[2] => Equal1.IN0
ALUFN[2] => Equal2.IN0
ALUFN[2] => Equal3.IN0
ALUFN[2] => Equal4.IN0
ALUFN[2] => Equal5.IN0
ALUFN[2] => Equal6.IN0
ALUFN[2] => Equal7.IN0
ALUFN[2] => Equal8.IN0
ALUFN[2] => Equal9.IN0
ALUFN[2] => Equal10.IN0
ALUFN[2] => Equal11.IN0
ALUFN[2] => Equal12.IN0
ALUFN[2] => Equal13.IN0
ALUFN[2] => Equal14.IN0
ALUFN[2] => Equal15.IN0
ALUFN[2] => Equal16.IN0
ALUFN[2] => Equal17.IN0
ALUFN[2] => Equal18.IN0
ALUFN[2] => Equal19.IN0
ALUFN[2] => Equal20.IN0
ALUFN[2] => Equal21.IN0
ALUFN[2] => Equal22.IN0
ALUFN[2] => Equal23.IN0
ALUFN[2] => Equal24.IN0
ALUFN[2] => Equal25.IN0
ALUFN[2] => Equal26.IN0
ALUFN[2] => Equal27.IN0
adderSub_cout <= FA:rest:7:chain.cout
adderSub_out[0] <= FA:first.s
adderSub_out[1] <= FA:rest:1:chain.s
adderSub_out[2] <= FA:rest:2:chain.s
adderSub_out[3] <= FA:rest:3:chain.s
adderSub_out[4] <= FA:rest:4:chain.s
adderSub_out[5] <= FA:rest:5:chain.s
adderSub_out[6] <= FA:rest:6:chain.s
adderSub_out[7] <= FA:rest:7:chain.s


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:first
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:1:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:2:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:3:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:4:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:5:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:6:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|AdderSub:AdderSub_inst|FA:\rest:7:chain
xi => s.IN0
xi => cout.IN0
xi => cout.IN0
yi => s.IN1
yi => cout.IN1
yi => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|Shifter:Shifter_inst
y_Shifter_in[0] => Mux7.IN10
y_Shifter_in[0] => Mux15.IN10
y_Shifter_in[0] => Mux14.IN10
y_Shifter_in[0] => Mux13.IN10
y_Shifter_in[0] => Mux12.IN10
y_Shifter_in[0] => Mux11.IN10
y_Shifter_in[0] => Mux10.IN10
y_Shifter_in[0] => Mux9.IN10
y_Shifter_in[0] => Mux8.IN10
y_Shifter_in[0] => Mux16.IN10
y_Shifter_in[1] => Mux6.IN10
y_Shifter_in[1] => Mux14.IN9
y_Shifter_in[1] => Mux13.IN9
y_Shifter_in[1] => Mux12.IN9
y_Shifter_in[1] => Mux11.IN9
y_Shifter_in[1] => Mux10.IN9
y_Shifter_in[1] => Mux9.IN9
y_Shifter_in[1] => Mux8.IN9
y_Shifter_in[1] => Mux17.IN10
y_Shifter_in[1] => Mux7.IN9
y_Shifter_in[1] => Mux16.IN9
y_Shifter_in[2] => Mux5.IN10
y_Shifter_in[2] => Mux13.IN8
y_Shifter_in[2] => Mux12.IN8
y_Shifter_in[2] => Mux11.IN8
y_Shifter_in[2] => Mux10.IN8
y_Shifter_in[2] => Mux9.IN8
y_Shifter_in[2] => Mux8.IN8
y_Shifter_in[2] => Mux17.IN9
y_Shifter_in[2] => Mux6.IN9
y_Shifter_in[2] => Mux7.IN8
y_Shifter_in[2] => Mux16.IN8
y_Shifter_in[3] => Mux4.IN10
y_Shifter_in[3] => Mux12.IN7
y_Shifter_in[3] => Mux11.IN7
y_Shifter_in[3] => Mux10.IN7
y_Shifter_in[3] => Mux9.IN7
y_Shifter_in[3] => Mux8.IN7
y_Shifter_in[3] => Mux17.IN8
y_Shifter_in[3] => Mux5.IN9
y_Shifter_in[3] => Mux6.IN8
y_Shifter_in[3] => Mux7.IN7
y_Shifter_in[3] => Mux16.IN7
y_Shifter_in[4] => Mux3.IN10
y_Shifter_in[4] => Mux11.IN6
y_Shifter_in[4] => Mux10.IN6
y_Shifter_in[4] => Mux9.IN6
y_Shifter_in[4] => Mux8.IN6
y_Shifter_in[4] => Mux17.IN7
y_Shifter_in[4] => Mux4.IN9
y_Shifter_in[4] => Mux5.IN8
y_Shifter_in[4] => Mux6.IN7
y_Shifter_in[4] => Mux7.IN6
y_Shifter_in[4] => Mux16.IN6
y_Shifter_in[5] => Mux2.IN10
y_Shifter_in[5] => Mux10.IN5
y_Shifter_in[5] => Mux9.IN5
y_Shifter_in[5] => Mux8.IN5
y_Shifter_in[5] => Mux17.IN6
y_Shifter_in[5] => Mux3.IN9
y_Shifter_in[5] => Mux4.IN8
y_Shifter_in[5] => Mux5.IN7
y_Shifter_in[5] => Mux6.IN6
y_Shifter_in[5] => Mux7.IN5
y_Shifter_in[5] => Mux16.IN5
y_Shifter_in[6] => Mux1.IN10
y_Shifter_in[6] => Mux9.IN4
y_Shifter_in[6] => Mux8.IN4
y_Shifter_in[6] => Mux17.IN5
y_Shifter_in[6] => Mux2.IN9
y_Shifter_in[6] => Mux3.IN8
y_Shifter_in[6] => Mux4.IN7
y_Shifter_in[6] => Mux5.IN6
y_Shifter_in[6] => Mux6.IN5
y_Shifter_in[6] => Mux7.IN4
y_Shifter_in[6] => Mux16.IN4
y_Shifter_in[7] => Mux0.IN10
y_Shifter_in[7] => Mux8.IN3
y_Shifter_in[7] => Mux17.IN4
y_Shifter_in[7] => Mux1.IN9
y_Shifter_in[7] => Mux2.IN8
y_Shifter_in[7] => Mux3.IN7
y_Shifter_in[7] => Mux4.IN6
y_Shifter_in[7] => Mux5.IN5
y_Shifter_in[7] => Mux6.IN4
y_Shifter_in[7] => Mux7.IN3
x_Shifter_in[0] => Mux0.IN9
x_Shifter_in[0] => Mux1.IN8
x_Shifter_in[0] => Mux2.IN7
x_Shifter_in[0] => Mux3.IN6
x_Shifter_in[0] => Mux4.IN5
x_Shifter_in[0] => Mux5.IN4
x_Shifter_in[0] => Mux6.IN3
x_Shifter_in[0] => Mux7.IN2
x_Shifter_in[0] => Mux8.IN2
x_Shifter_in[0] => Mux9.IN3
x_Shifter_in[0] => Mux10.IN4
x_Shifter_in[0] => Mux11.IN5
x_Shifter_in[0] => Mux12.IN6
x_Shifter_in[0] => Mux13.IN7
x_Shifter_in[0] => Mux14.IN8
x_Shifter_in[0] => Mux15.IN9
x_Shifter_in[0] => Mux16.IN3
x_Shifter_in[0] => Mux17.IN3
x_Shifter_in[1] => Mux0.IN8
x_Shifter_in[1] => Mux1.IN7
x_Shifter_in[1] => Mux2.IN6
x_Shifter_in[1] => Mux3.IN5
x_Shifter_in[1] => Mux4.IN4
x_Shifter_in[1] => Mux5.IN3
x_Shifter_in[1] => Mux6.IN2
x_Shifter_in[1] => Mux7.IN1
x_Shifter_in[1] => Mux8.IN1
x_Shifter_in[1] => Mux9.IN2
x_Shifter_in[1] => Mux10.IN3
x_Shifter_in[1] => Mux11.IN4
x_Shifter_in[1] => Mux12.IN5
x_Shifter_in[1] => Mux13.IN6
x_Shifter_in[1] => Mux14.IN7
x_Shifter_in[1] => Mux15.IN8
x_Shifter_in[1] => Mux16.IN2
x_Shifter_in[1] => Mux17.IN2
x_Shifter_in[2] => Mux0.IN7
x_Shifter_in[2] => Mux1.IN6
x_Shifter_in[2] => Mux2.IN5
x_Shifter_in[2] => Mux3.IN4
x_Shifter_in[2] => Mux4.IN3
x_Shifter_in[2] => Mux5.IN2
x_Shifter_in[2] => Mux6.IN1
x_Shifter_in[2] => Mux7.IN0
x_Shifter_in[2] => Mux8.IN0
x_Shifter_in[2] => Mux9.IN1
x_Shifter_in[2] => Mux10.IN2
x_Shifter_in[2] => Mux11.IN3
x_Shifter_in[2] => Mux12.IN4
x_Shifter_in[2] => Mux13.IN5
x_Shifter_in[2] => Mux14.IN6
x_Shifter_in[2] => Mux15.IN7
x_Shifter_in[2] => Mux16.IN1
x_Shifter_in[2] => Mux17.IN1
ALUFN[0] => Equal0.IN0
ALUFN[0] => Equal1.IN2
ALUFN[1] => Equal0.IN2
ALUFN[1] => Equal1.IN1
ALUFN[2] => Equal0.IN1
ALUFN[2] => Equal1.IN0
Shifter_cout <= Shifter_cout.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[0] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[1] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[2] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[3] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[4] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[5] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[6] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE
Shifter_out[7] <= Shifter_out.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|top:TOPModule|ALU:ALU_inst|Logic:Logic_inst
x_logic[0] => output_matrix[1][0].IN0
x_logic[0] => output_matrix[3][0].IN0
x_logic[0] => output_matrix[2][0].IN0
x_logic[0] => output_matrix[4][0].IN0
x_logic[0] => output_matrix[5][0].IN0
x_logic[0] => output_matrix[6][0].IN0
x_logic[1] => output_matrix[1][1].IN0
x_logic[1] => output_matrix[3][1].IN0
x_logic[1] => output_matrix[2][1].IN0
x_logic[1] => output_matrix[4][1].IN0
x_logic[1] => output_matrix[5][1].IN0
x_logic[1] => output_matrix[6][1].IN0
x_logic[2] => output_matrix[1][2].IN0
x_logic[2] => output_matrix[3][2].IN0
x_logic[2] => output_matrix[2][2].IN0
x_logic[2] => output_matrix[4][2].IN0
x_logic[2] => output_matrix[5][2].IN0
x_logic[2] => output_matrix[6][2].IN0
x_logic[3] => output_matrix[1][3].IN0
x_logic[3] => output_matrix[3][3].IN0
x_logic[3] => output_matrix[2][3].IN0
x_logic[3] => output_matrix[4][3].IN0
x_logic[3] => output_matrix[5][3].IN0
x_logic[3] => output_matrix[6][3].IN0
x_logic[4] => output_matrix[1][4].IN0
x_logic[4] => output_matrix[3][4].IN0
x_logic[4] => output_matrix[2][4].IN0
x_logic[4] => output_matrix[4][4].IN0
x_logic[4] => output_matrix[5][4].IN0
x_logic[4] => output_matrix[6][4].IN0
x_logic[5] => output_matrix[1][5].IN0
x_logic[5] => output_matrix[3][5].IN0
x_logic[5] => output_matrix[2][5].IN0
x_logic[5] => output_matrix[4][5].IN0
x_logic[5] => output_matrix[5][5].IN0
x_logic[5] => output_matrix[6][5].IN0
x_logic[6] => output_matrix[1][6].IN0
x_logic[6] => output_matrix[3][6].IN0
x_logic[6] => output_matrix[2][6].IN0
x_logic[6] => output_matrix[4][6].IN0
x_logic[6] => output_matrix[5][6].IN0
x_logic[6] => output_matrix[6][6].IN0
x_logic[7] => output_matrix[1][7].IN0
x_logic[7] => output_matrix[3][7].IN0
x_logic[7] => output_matrix[2][7].IN0
x_logic[7] => output_matrix[4][7].IN0
x_logic[7] => output_matrix[5][7].IN0
x_logic[7] => output_matrix[6][7].IN0
y_logic[0] => output_matrix[1][0].IN1
y_logic[0] => output_matrix[3][0].IN1
y_logic[0] => output_matrix[2][0].IN1
y_logic[0] => output_matrix[4][0].IN1
y_logic[0] => output_matrix[5][0].IN1
y_logic[0] => output_matrix[6][0].IN1
y_logic[0] => Logic_out.DATAB
y_logic[1] => output_matrix[1][1].IN1
y_logic[1] => output_matrix[3][1].IN1
y_logic[1] => output_matrix[2][1].IN1
y_logic[1] => output_matrix[4][1].IN1
y_logic[1] => output_matrix[5][1].IN1
y_logic[1] => output_matrix[6][1].IN1
y_logic[1] => Logic_out.DATAB
y_logic[2] => output_matrix[1][2].IN1
y_logic[2] => output_matrix[3][2].IN1
y_logic[2] => output_matrix[2][2].IN1
y_logic[2] => output_matrix[4][2].IN1
y_logic[2] => output_matrix[5][2].IN1
y_logic[2] => output_matrix[6][2].IN1
y_logic[2] => Logic_out.DATAB
y_logic[3] => output_matrix[1][3].IN1
y_logic[3] => output_matrix[3][3].IN1
y_logic[3] => output_matrix[2][3].IN1
y_logic[3] => output_matrix[4][3].IN1
y_logic[3] => output_matrix[5][3].IN1
y_logic[3] => output_matrix[6][3].IN1
y_logic[3] => Logic_out.DATAB
y_logic[4] => output_matrix[1][4].IN1
y_logic[4] => output_matrix[3][4].IN1
y_logic[4] => output_matrix[2][4].IN1
y_logic[4] => output_matrix[4][4].IN1
y_logic[4] => output_matrix[5][4].IN1
y_logic[4] => output_matrix[6][4].IN1
y_logic[4] => Logic_out.DATAB
y_logic[5] => output_matrix[1][5].IN1
y_logic[5] => output_matrix[3][5].IN1
y_logic[5] => output_matrix[2][5].IN1
y_logic[5] => output_matrix[4][5].IN1
y_logic[5] => output_matrix[5][5].IN1
y_logic[5] => output_matrix[6][5].IN1
y_logic[5] => Logic_out.DATAB
y_logic[6] => output_matrix[1][6].IN1
y_logic[6] => output_matrix[3][6].IN1
y_logic[6] => output_matrix[2][6].IN1
y_logic[6] => output_matrix[4][6].IN1
y_logic[6] => output_matrix[5][6].IN1
y_logic[6] => output_matrix[6][6].IN1
y_logic[6] => Logic_out.DATAB
y_logic[7] => output_matrix[1][7].IN1
y_logic[7] => output_matrix[3][7].IN1
y_logic[7] => output_matrix[2][7].IN1
y_logic[7] => output_matrix[4][7].IN1
y_logic[7] => output_matrix[5][7].IN1
y_logic[7] => output_matrix[6][7].IN1
y_logic[7] => Logic_out.DATAB
ALUFN[0] => Equal0.IN2
ALUFN[0] => Equal1.IN1
ALUFN[0] => Equal2.IN2
ALUFN[0] => Equal3.IN1
ALUFN[0] => Equal4.IN2
ALUFN[0] => Equal5.IN0
ALUFN[0] => Equal6.IN2
ALUFN[1] => Equal0.IN1
ALUFN[1] => Equal1.IN2
ALUFN[1] => Equal2.IN1
ALUFN[1] => Equal3.IN0
ALUFN[1] => Equal4.IN0
ALUFN[1] => Equal5.IN2
ALUFN[1] => Equal6.IN1
ALUFN[2] => Equal0.IN0
ALUFN[2] => Equal1.IN0
ALUFN[2] => Equal2.IN0
ALUFN[2] => Equal3.IN2
ALUFN[2] => Equal4.IN1
ALUFN[2] => Equal5.IN1
ALUFN[2] => Equal6.IN0
Logic_out[0] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[1] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[2] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[3] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[4] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[5] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[6] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE
Logic_out[7] <= Logic_out.DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|SegDecoder:DecoderModuleXHex0
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|SegDecoder:DecoderModuleXHex1
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|SegDecoder:DecoderModuleYHex2
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|SegDecoder:DecoderModuleYHex3
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|SegDecoder:DecoderModuleOutHex4
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|SegDecoder:DecoderModuleOutHex5
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
seg[0] <= <VCC>
seg[1] <= <VCC>
seg[2] <= <VCC>
seg[3] <= <VCC>
seg[4] <= <VCC>
seg[5] <= <VCC>
seg[6] <= <VCC>


|topIO_Interface|CounterEnvelope:pll_wrap
Clk => pll:u0.refclk
En => counter:m0.enable
rst => counter:m0.rst
rst => pll:u0.rst
Qout <= counter:m0.q


|topIO_Interface|CounterEnvelope:pll_wrap|counter:m0
clk => q_int[0].CLK
clk => q_int[1].CLK
clk => q_int[2].CLK
clk => q_int[3].CLK
clk => q_int[4].CLK
clk => q_int[5].CLK
clk => q_int[6].CLK
clk => q_int[7].CLK
clk => q_int[8].CLK
clk => q_int[9].CLK
clk => q_int[10].CLK
clk => q_int[11].CLK
clk => q_int[12].CLK
clk => q_int[13].CLK
clk => q_int[14].CLK
clk => q_int[15].CLK
clk => q_int[16].CLK
clk => q_int[17].CLK
clk => q_int[18].CLK
clk => q_int[19].CLK
clk => q_int[20].CLK
clk => q_int[21].CLK
clk => q_int[22].CLK
clk => q_int[23].CLK
clk => q_int[24].CLK
clk => q_int[25].CLK
clk => q_int[26].CLK
clk => q_int[27].CLK
clk => q_int[28].CLK
clk => q_int[29].CLK
clk => q_int[30].CLK
clk => q_int[31].CLK
enable => q_int[31].ENA
enable => q_int[30].ENA
enable => q_int[29].ENA
enable => q_int[28].ENA
enable => q_int[27].ENA
enable => q_int[26].ENA
enable => q_int[25].ENA
enable => q_int[24].ENA
enable => q_int[23].ENA
enable => q_int[22].ENA
enable => q_int[21].ENA
enable => q_int[20].ENA
enable => q_int[19].ENA
enable => q_int[18].ENA
enable => q_int[17].ENA
enable => q_int[16].ENA
enable => q_int[15].ENA
enable => q_int[14].ENA
enable => q_int[13].ENA
enable => q_int[12].ENA
enable => q_int[11].ENA
enable => q_int[10].ENA
enable => q_int[9].ENA
enable => q_int[8].ENA
enable => q_int[7].ENA
enable => q_int[6].ENA
enable => q_int[5].ENA
enable => q_int[4].ENA
enable => q_int[3].ENA
enable => q_int[2].ENA
enable => q_int[1].ENA
enable => q_int[0].ENA
rst => q_int[0].ACLR
rst => q_int[1].ACLR
rst => q_int[2].ACLR
rst => q_int[3].ACLR
rst => q_int[4].ACLR
rst => q_int[5].ACLR
rst => q_int[6].ACLR
rst => q_int[7].ACLR
rst => q_int[8].ACLR
rst => q_int[9].ACLR
rst => q_int[10].ACLR
rst => q_int[11].ACLR
rst => q_int[12].ACLR
rst => q_int[13].ACLR
rst => q_int[14].ACLR
rst => q_int[15].ACLR
rst => q_int[16].ACLR
rst => q_int[17].ACLR
rst => q_int[18].ACLR
rst => q_int[19].ACLR
rst => q_int[20].ACLR
rst => q_int[21].ACLR
rst => q_int[22].ACLR
rst => q_int[23].ACLR
rst => q_int[24].ACLR
rst => q_int[25].ACLR
rst => q_int[26].ACLR
rst => q_int[27].ACLR
rst => q_int[28].ACLR
rst => q_int[29].ACLR
rst => q_int[30].ACLR
rst => q_int[31].ACLR
q <= q_int[6].DB_MAX_OUTPUT_PORT_TYPE


|topIO_Interface|CounterEnvelope:pll_wrap|pll:u0
locked <= pll_pll_0:pll_0.locked
outclk_0 <= pll_pll_0:pll_0.outclk_0
refclk => pll_pll_0:pll_0.refclk
rst => pll_pll_0:pll_0.rst


|topIO_Interface|CounterEnvelope:pll_wrap|pll:u0|pll_pll_0:pll_0
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|topIO_Interface|CounterEnvelope:pll_wrap|pll:u0|pll_pll_0:pll_0|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
zdbfbclk <> <GND>


